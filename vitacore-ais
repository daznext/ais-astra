#!/bin/bash

DOCKER_IMAGE="vitacore/ais-docker:latest"
AIS_ARC="ais.tar.bz2"
AIS_URL="https://github.com/daznext/ais-astra/raw/master/Binary/ais.tar.bz2"
AIS_EXE="./ais/Update/AKUZ.UpdateUtility.exe"

USER_M=$USER

install_docker_astra() {
    sudo apt-get update && sudo apt-get -y upgrade && \
    sudo apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common sudo && \
    curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add - && \
    sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian stretch stable" && \
    sudo apt-get update && sudo apt-get -y upgrade && \
    sudo apt-get install -y docker-ce docker-ce-cli containerd.io && \
    sudo usermod -aG docker $USER_M
    echo "Докер установлен, необходимо перезагрузить систему (или выйти и зайти)"
    exit 0
}

check_docker () {
    if ! which docker >/dev/null 2>&1; then
        read -p "Докер не установлен, ставим? (y/n)? :" choice
        case "$choice" in 
            y|Y ) 
                echo "Ставим докер"
                install_docker_astra
                ;;
            * ) 
                echo "выход"
                exit 0
                ;;
        esac
    else
        if ! id -nG | tr ' ' '\n' | grep docker; then
            echo "Вы не в группе docker"
            exit 0
        fi
    fi
}

if [ `uname` == "Darwin" ]; then
   echo "Mac, skip check docker"
else
   check_docker
fi


# Run docker with just X11 support
docker_run () {
    docker run -it \
    --rm \
    --env="DISPLAY" \
    --volume="${XAUTHORITY}:/root/.Xauthority:ro" \
    --volume="/tmp/.X11-unix:/tmp/.X11-unix:ro" \
    --volume="/etc/localtime:/etc/localtime:ro" \
    --volume="aishome:/home/wineuser" \
    --hostname="winecellar" \
    --name="wineais" \
    $DOCKER_IMAGE "$@"
}

# Run docker on macOS with X11 over TCP socket
docker_run_on_mac () {
    docker run -it \
    --rm \
    --env="DISPLAY=host.docker.internal:0" \
    --volume="aishome:/home/wineuser" \
    --hostname="winecellar" \
    --name="wineais" \
    $DOCKER_IMAGE "$@"
}


case $1 in
    --help)
        echo "Usage: $0 [command] [arguments]... | --clean"
        echo "e.g."
        echo "    $0"
        echo "    $0 wine notepad.exe"
        echo "    $0 wineboot --init"
        exit 0
        ;;
    --clean)
        read -p "Очистка диска АИС? (y/n)? :" choice
        case "$choice" in 
            y|Y ) 
                docker volume rm aishome
                echo "Диск АИС удален"
                ;;
            * ) 
                echo "выход"
                ;;
        esac
        exit 0
esac

docker pull $DOCKER_IMAGE

if ! docker volume ls -qf "name=aishome" | grep -q "aishome"; then
    echo "INFO: Первый запуск, устанавливаем все..."
    if xhost >& /dev/null ; then 
        docker volume create aishome
        if [ `uname` == "Darwin" ]; then
            docker_run_on_mac winetricks -q dotnet20sp2
            docker_run_on_mac wget $AIS_URL 
            docker_run_on_mac tar xvjf $AIS_ARC
        else
            docker_run winetricks -q dotnet20sp2
            docker_run winetricks gdiplus
            docker_run winetricks ie8
            docker_run wget $AIS_URL 
            docker_run tar xvjf $AIS_ARC
        fi
       
        echo "Все поставили"
    else 
        echo "Это надо делать из X сессии"
        exit 1
    fi  
else
    echo "INFO: Using existing Docker volume container 'aishome'..."
fi

# Check if running on a Mac
if [ `uname` == "Darwin" ]; then
    echo "mac"
    # Check XQuartz installed
    if ! which xquartz >/dev/null 2>&1; then
        echo "ERROR: XQuartz does not appear to be installed"
        exit 1
    fi

    # Allow localhost to access XQuartz if required
    if ! xhost | grep "INET:localhost" >/dev/null 2>&1; then
        echo "WARNING: Adding localhost to authorized xhost clients"
        xhost + 127.0.0.1
    fi

    if [ -z "$1" ]; then
        echo "Запуск АИС ЛПУ"
        if xhost >& /dev/null ; then 
            docker_run_on_mac wine $AIS_EXE ; exit
        else 
            echo "Это надо делать из X сессии"
            exit 1
        fi       
    fi
    docker_run_on_mac "$@"
    exit 0
else
    # $XAUTHORITY overrides default location of .Xauthority
    if [ -z $XAUTHORITY ]; then
        if [ -s "${HOME}/.Xauthority" ]; then
            export XAUTHORITY="${HOME}/.Xauthority"
        else
            echo "ERROR: No valid .Xauthority file found for X11"
            exit 1
        fi
    fi
    xhost +
    echo "INFO: Start docker wine"
    if [ -z "$1" ]; then
        echo "Запуск АИС ЛПУ"
        if xhost >& /dev/null ; then 
            docker_run wine $AIS_EXE ; exit
        else 
            echo "Это надо делать из X сессии"
            exit 1
        fi       
    fi
    docker_run "$@"
fi
